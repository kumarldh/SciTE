##
# jQuery API, as fetched from jQuery.org. ImJuli2016, Marcedo@HabmalneFrage.de | https://sourceforge.net/projects/scite-webdev
##
add(html)Add elements to the set of matched elements.->Traversing
ajax([settings])Perform an asynchronous HTTP (Ajax)request.->Ajax
add(elements)Add elements to the set of matched elements.->Traversing
add(selector)Add elements to the set of matched elements.->Traversing
ajax(url [, settings])Perform an asynchronous HTTP (Ajax)request.->Ajax
add(jQuery object)Add elements to the set of matched elements.->Traversing
add(selector , context)Add elements to the set of matched elements.->Traversing
andSelf()Add the previous set of elements on the stack to the current set.->Deprecated
animate(properties , options)Perform a custom animation of a set of CSS properties.->Effects
ajaxSetup(options)Set default values for future Ajax requests. Its use is not recommended.->Ajax
addClass(className)Adds the specified class(es)to each of the set of matched elements.->Attributes
appendTo(target)Insert every element in the set of matched elements to the end of the target.->Manipulation
addClass(function(index, currentClass)Adds the specified class(es)to each of the set of matched elements.->Attributes
ajaxStart(handler()Register a handler to be called when the first Ajax request begins.\t\nThis is an Ajax Event.->Ajax
animate(properties [, duration] [, easing] [, complete])Perform a custom animation of a set of CSS properties.->Effects
ajaxStop(handler()Register a handler to be called when all Ajax requests have completed.\t\nThis is an Ajax Event.->Ajax
addBack([selector])Add the previous set of elements on the stack to the current set, optionally filtered by a() .->Traversing
after(function(index)Insert content, specified by the parameter,\t\nafter each element in the set of matched elements.->Manipulation
after(content [, content])Insert content, specified by the parameter,\t\nafter each element in the set of matched elements.->Manipulation
ajaxSend(handler(event, jqXHR, ajaxOptions)Attach a function to be executed before an Ajax request is sent.\t\nThis is an Ajax Event.->Ajax
ajaxTransport(dataType , handler(options, originalOptions, jqXHR)Creates an object that handles the actual transmission of Ajax data.->Ajax
append(content [, content])Insert content, specified by the parameter,\t\nto the end of each element in the set of matched elements.->Manipulation
ajaxComplete(handler(event, XMLHttpRequest, ajaxOptions)Register a handler to be called when Ajax requests complete.\t\nThis is an AjaxEvent.->Ajax
append(function(index, html)Insert content, specified by the parameter,\t\nto the end of each element in the set of matched elements.->Manipulation
ajaxError(handler(event, jqXHR, ajaxSettings, thrownError)Register a handler to be called when Ajax requests complete with\t\nan error. This is an Ajax Event.->Ajax
ajaxSuccess(handler(event, XMLHttpRequest, ajaxOptions)Attach a function to be executed whenever an Ajax request completes\t\nsuccessfully. This is an Ajax Event.->Ajax
attr(attributes)Get the value of an attribute for the first element in the set of\t\nmatched elements or set one or more attributes for every matched element.->Attributes
attr(attributeName)Get the value of an attribute for the first element in the set of\t\nmatched elements or set one or more attributes for every matched element.->Attributes
attr(attributeName , value)Get the value of an attribute for the first element in the set of\t\nmatched elements or set one or more attributes for every matched element.->Attributes
attr(attributeName , function(index, attr)Get the value of an attribute for the first element in the set of\t\nmatched elements or set one or more attributes for every matched element.->Attributes
ajaxPrefilter([dataTypes] , handler(options, originalOptions, jqXHR)Handle custom Ajax options or modify existing options before each\t\nrequest is sent and before they are processed by ajax().->Ajax
bind(events)Attach a handler to an event for the elements.->Events
bind(eventType [, eventData] [, preventBubble])Attach a handler to an event for the elements.->Events
bind(eventType [, eventData] , handler(eventObject)Attach a handler to an event for the elements.->Events
blur()Bind an event handler to the "blur" JavaScript event, or trigger that event on an element.->Events
blur(handler(eventObject)Bind an event handler to the "blur" JavaScript event, or trigger that event on an element.->Events
before(function)Insert content, specified by the parameter,\t\nbefore each element in the set of matched elements.->Manipulation
before(content [, content])Insert content, specified by the parameter,\t\nbefore each element in the set of matched elements.->Manipulation
blur([eventData] , handler(eventObject)Bind an event handler to the "blur" JavaScript event, or trigger that event on an element.->Events
boxModel()Deprecated in jQuery 1.3 (see support).\t\nStates if the current page, in the user's browser, is being rendered using the W3C CSS Box Model.->Deprecated
browser()Contains flags for the useragent, read from navigator.userAgent. \t\nThis property was removed in jQuery 1.9 ->Deprecated
callbacks.empty()Remove all of the callbacks from a list.->Callbacks Object
callbacks.lock()Lock a callback list in its current state.->Callbacks Object
callbacks.locked()Determine if the callbacks list has been locked.->Callbacks Object
callbacks.disable()Disable a callback list from doing anything more.->Callbacks Object
callbacks.disabled()Determine if the callbacks list has been disabled.->Callbacks Object
clearQueue([queueName])Remove from the queue all items that have not yet been run.->Data
clone([withDataAndEvents])Create a deep copy of the set of matched elements.->Manipulation
callbacks.has(callback)Determine whether a supplied callback is in a list->Callbacks Object
callbacks.fire(arguments)Call all of the callbacks with the given arguments->Callbacks Object
callbacks.fired()Determine if the callbacks have already been called at least once.->Callbacks Object
callbacks.add(callbacks)Add a callback or a collection of callbacks to a callback list.->Callbacks Object
click()Bind an event handler to the "click" JavaScript event,or trigger that event on an element.->Events
change()Bind an event handler to the "change" JavaScript event, or trigger that event on an element.->Events
contains(container , contained)Check to see if a DOM element is a descendant of another DOM element.->Utilities
callbacks.remove(callbacks)Remove a callback or a collection of callbacks from a callback list.->Callbacks Object
clone([withDataAndEvents] [, deepWithDataAndEvents])Create a deep copy of the set of matched elements.->Manipulation
callbacks.fireWith([context] [, args])Call all callbacks in a list with the given context and arguments.->Callbacks Object
contents()Get the children of each element in the set of matched elements,\t\nincluding text and comment nodes.->Traversing
children([selector])Get the children of each element in the set\t\nof matched elements, optionally filtered by a() .->Traversing
click(handler(eventObject)Bind an event handler to the "click" JavaScript event, or trigger that event on an element.->Events
callbacks(flags)A multi-purpose callbacks list object that provides\t\n a powerful way to manage callback lists.->Callbacks Object
change(handler(eventObject)Bind an event handler to the "change" JavaScript event, or trigger that event on an element.->Events
context()The DOM node context originally passed to jQuery(); if none was passed\t\nthen context will likely be the document.->Deprecated
click([eventData] , handler(eventObject)Bind an event handler to the "click" JavaScript event, or trigger that event on an element.->Events
change([eventData] , handler(eventObject)Bind an event handler to the "change" JavaScript event, or trigger that event on an element.->Events
cssHooks()Hook directly into jQuery to override how particular CSS properties\t\nare retrieved or set, normalize CSS property naming, or create custom properties.->CSS
css(properties)Get the value of a style property for the first element in the set\t\nof matched elements or set one or more CSS properties for every matched element.->CSS
css(propertyName)Get the value of a style property for the first element in the set\t\nof matched elements or set one or more CSS properties for every matched element.->CSS
css(propertyNames)Get the value of a style property for the first element in the set\t\nof matched elements or set one or more CSS properties for every matched element.->CSS
css(propertyName , value)Get the value of a style property for the first element in the set\t\nof matched elements or set one or more CSS properties for every matched element.->CSS
closest(element)For each element in the set, get the first element that matches the ()\t\nby testing the element itself and traversing up through its ancestors in the DOM tree.->Traversing
closest(selector)For each element in the set, get the first element that matches the ()\t\nby testing the element itself and traversing up through its ancestors in the DOM tree.->Traversing
closest(jQuery object)For each element in the set, get the first element that matches the()\t\nby testing the element itself and traversing up through its ancestors in the DOM tree.->Traversing
css(propertyName , function(index, value)Get the value of a style property for the first element in the set\t\nof matched elements or set one or more CSS properties for every matched element.->CSS
closest(selector [, context])For each element in the set, get the first element that matches the()\t\nby testing the element itself and traversing up through its ancestors in the DOM tree.->Traversing
closest(selectors [, context])For each element in the set, get the first element that matches the ()\t\nby testing the element itself and traversing up through its ancestors in the DOM tree.->Traversing
deferred.promise([target])Return a Deferred's Promise object. ->Deferred Object
detach([selector])Remove the set of matched elements from the DOM.->Manipulation
deferred.state()Determine the current state of a Deferred object. ->Deferred Object
dequeue([queueName])Execute the next function on the queue for the matched elements.->Data
die()Remove event handlers previously attached using .live()from the elements.->Deprecated
deferred.isRejected()Determine whether a Deferred object has been rejected. ->Deferred Object
deferred.isResolved()Determine whether a Deferred object has been resolved. ->Deferred Object
die(events)Remove event handlers previously attached using .live()from the elements.->Deprecated
dequeue(element [, queueName])Execute the next function on the queue for the matched element.->Data
delay(duration [, queueName])Set a timer to delay execution of subsequent items in the queue.->Effects
deferred.notify(args)Call the progressCallbacks on a Deferred object with the given args. ->Deferred Object
deferred.pipe([doneFilter] [, failFilter])Utility method to filter and/or chain Deferreds. ->Deferred Object
die(eventType [, handler])Remove event handlers previously attached using .live()from the elements.->Deprecated
deferred.reject([args])Reject a Deferred object and call any failCallbacks with the given args. ->Deferred Object
dblclick()Bind an event handler to the "dblclick" JavaScript event, or trigger that event on an element.->Events
deferred.resolve([args])Resolve a Deferred object and call any doneCallbacks with the given args. ->Deferred Object
data(element)Store arbitrary data associated with the specified element and/or\t\nreturn the value that was set.->Data
data(element , key)Store arbitrary data associated with the specified element and/or\t\nreturn the value that was set.->Data
deferred.done(doneCallbacks [, doneCallbacks])Add handlers to be called when the Deferred object is resolved. ->Deferred Object
deferred.fail(failCallbacks [, failCallbacks])Add handlers to be called when the Deferred object is rejected. ->Deferred Object
deferred.pipe([doneFilter] [, failFilter] [, progressFilter])Utility method to filter and/or chain Deferreds. ->Deferred Object
data(element , key , value)Store arbitrary data associated with the specified element and/or\t\nreturn the value that was set.->Data
dblclick(handler(eventObject)Bind an event handler to the "dblclick" JavaScript event, or trigger that event on an element.->Events
deferred.notifyWith(context [, args])Call the progressCallbacks on a Deferred object with the given context\t\nand args. ->Deferred Object
deferred.progress(progressCallbacks)Add handlers to be called when the Deferred object generates progress\t\nnotifications.->Deferred Object
deferred.rejectWith(context [, args])Reject a Deferred object and call any failCallbacks with the given\t\ncontext and args. ->Deferred Object
deferred.resolveWith(context [, args])Resolve a Deferred object and call any doneCallbacks with the given\t\ncontext and args. ->Deferred Object
dblclick([eventData] , handler(eventObject)Bind an event handler to the "dblclick" JavaScript event, or trigger that event on an element.->Events
deferred.always(alwaysCallbacks [, alwaysCallbacks])Add handlers to be called when the Deferred object is either resolved or rejected. ->Deferred Object
deferred.then(doneCallbacks , failCallbacks)Add handlers to be called when the Deferred object is resolved,\t\nrejected, or still in progress. ->Deferred Object
data()Store arbitrary data associated with the matched elements or return\t\nthe value at the named data store for the first element in the set of matched elements.->Data
data(key)Store arbitrary data associated with the matched elements or return\t\nthe value at the named data store for the first element in the set of matched elements.->Data
data(obj)Store arbitrary data associated with the matched elements or return\t\nthe value at the named data store for the first element in the set of matched elements.->Data
deferred.then(doneFilter [, failFilter] [, progressFilter])Add handlers to be called when the Deferred object is resolved,\t\nrejected, or still in progress. ->Deferred Object
delegate(selector , events)Attach a handler to one or more events for all elements that match\t\nthe() , now or in the future, based on a specific set of root elements.->Events
data(key , value)Store arbitrary data associated with the matched elements or return\t\nthe value at the named data store for the first element in the set of matched elements.->Data
deferred.then(doneCallbacks , failCallbacks [, progressCallbacks])Add handlers to be called when the Deferred object is resolved,\t\nrejected, or still in progress. ->Deferred Object
delegate(selector , eventType , handler(eventObject)Attach a handler to one or more events for all elements that match\t\nthe() , now or in the future, based on a specific set of root elements.->Events
delegate(selector , eventType , eventData , handler(eventObject)Attach a handler to one or more events for all elements that match the() , now or in the future,->Events
deferred([beforeStart])A constructor function that returns a chainable utility object with methods to register multiple callbacks into callback queues->Deferred Object
event.type() Describes the nature of the event.->Events
event.target() The DOM element that initiated the event. ->Events
error(message)Takes a string and throws an exception containing it.->Internals
event.namespace() The namespace specified when the event was triggered.->Events
event.pageY() The mouse position relative to the top edge of the document.->Events
event.relatedTarget() The other DOM element involved in the event, if any.->Events
event.pageX() The mouse position relative to the left edge of the document.->Events
event.currentTarget() The current DOM element within the event bubbling phase. ->Events
event.metaKey() Indicates whether the META key was pressed when the event fired.->Events
eq(index)Reduce the set of matched elements to the one at the specified index.->Traversing
eq(-index)Reduce the set of matched elements to the one at the specified index.->Traversing
error(handler(eventObject)Bind an event handler to the "error" JavaScript event.->Deprecated
event.delegateTarget() The element where the currently-called jQuery event handler was attached.->Events
error([eventData] , handler(eventObject)Bind an event handler to the "error" JavaScript event.->Deprecated
event.isDefaultPrevented()Returns whether event.preventDefault()was ever called on this event object. ->Events
event.isPropagationStopped()Returns whether event.stopPropagation()was ever called on this event object. ->Events
event.preventDefault()If this method is called, the default action of the event will not be triggered.->Events
event.which() For key or mouse events, this property indicates the specific key\t\nor button that was pressed.->Events
each(function(index, Element)Iterate over a jQuery object, executing a function for each matched element. ->Miscellaneous
event.data() An optional object of data passed to an event method\t\nwhen the current executing handler is bound. ->Events
extend(target [, object1] [, objectN])Merge the contents of two or more objects together into the first object.->Utilities
event.timeStamp() The difference in milliseconds between the time\t\n the browser created the event and January 1, 1970.->Events
extend([deep] , target , object1 [, objectN])Merge the contents of two or more objects together into the first object.->Utilities
event.isImmediatePropagationStopped()Returns whether event.stopImmediatePropagation()was ever called\t\non this event object. ->Events
event.result() The last value returned by an event handler that was triggered by\t\nthis event, unless the value was undefined.->Events
end()End the most recent filtering operation in the current chain and\t\nreturn the set of matched elements to its previous state.->Traversing
event.stopImmediatePropagation()Keeps the rest of the handlers from being executed and prevents the\t\nevent from bubbling up the DOM tree.->Events
event.stopPropagation()Prevents the event from bubbling up the DOM tree,\t\npreventing any parent handlers from being notified of the event.->Events
each(collection , callback(indexInArray, valueOfElement)A generic iterator function, which can be used to seamlessly iterate over both objects and arrays.->Utilities
fx.off ()Globally disable all animations.->Effects
fx.interval()The rate (in milliseconds)at which animations fire.->Effects
fadeIn(options)Display the matched elements by fading them to opaque.->Effects
first()Reduce the set of matched elements to the first in the set.->Traversing
fadeOut(options)Hide the matched elements by fading them to transparent.->Effects
focusin(handler(eventObject)Bind an event handler to the "focusin" event.->Events
fadeTo(duration , opacity [, complete])Adjust the opacity of the matched elements.->Effects
fadeToggle(options)Display or hide the matched elements by animating their opacity.->Effects
fadeIn([duration] [, complete])Display the matched elements by fading them to opaque.->Effects
focusout(handler(eventObject)Bind an event handler to the "focusout" JavaScript event.->Events
focusin([eventData] , handler(eventObject)Bind an event handler to the "focusin" event.->Events
fadeOut([duration] [, complete])Hide the matched elements by fading them to transparent.->Effects
fadeTo(duration , opacity [, easing] [, complete])Adjust the opacity of the matched elements.->Effects
fadeIn([duration] [, easing] [, complete])Display the matched elements by fading them to opaque.->Effects
fadeOut([duration] [, easing] [, complete])Hide the matched elements by fading them to transparent.->Effects
focusout([eventData] , handler(eventObject)Bind an event handler to the "focusout" JavaScript event.->Events
focus()Bind an event handler to the "focus" JavaScript event, or trigger that event on an element.->Events
fadeToggle([duration] [, easing] [, complete])Display or hide the matched elements by animating their opacity.->Effects
filter(element)Reduce the set of matched elements to those that match the() \t\nor pass the function's test. ->Traversing
filter(selector)Reduce the set of matched elements to those that match the() \t\nor pass the function's test. ->Traversing
filter(jQuery object)Reduce the set of matched elements to those that match the() \t\nor pass the function's test. ->Traversing
filter(function(index)Reduce the set of matched elements to those that match the() \t\nor pass the function's test. ->Traversing
fn.extend(object)Merge the contents of an object onto\t\nthe jQuery prototype to provide new jQuery instance methods.->Utilities
focus(handler(eventObject)Bind an event handler to the "focus" JavaScript event, or trigger that event on an element.->Events
focus([eventData] , handler(eventObject)Bind an event handler to the "focus" JavaScript event, or trigger that event on an element.->Events
find(element)Get the descendants of each element in the current set of matched\t\nelements, filtered by a() , jQuery object, or element.->Traversing
finish([queue])Stop the currently-running animation, remove all queued animations,\t\nand complete all animations for the matched elements.->Effects
find(selector)Get the descendants of each element in the current set of matched\t\nelements, filtered by a() , jQuery object, or element.->Traversing
find(jQuery object)Get the descendants of each element in the current set of matched\t\nelements, filtered by a() , jQuery object, or element.->Traversing
globalEval(code)Execute some JavaScript code globally.->Utilities
get()Retrieve the DOM elements matched by the jQuery object.->Miscellaneous
get(index)Retrieve the DOM elements matched by the jQuery object.->Miscellaneous
get(url [, data] [, success(data, textStatus, jqXHR)] [, dataType])Load data from the server using a HTTP GET request.->Ajax
getJSON(url [, data] [, success( data, textStatus, jqXHR )])Load JSON-encoded data from the server using a GET HTTP request.->Ajax
getScript(url [, success(script, textStatus, jqXHR)])Load a JavaScript file from the server using a GET HTTP request, then execute it.->Ajax
grep(array , function(elementOfArray, indexInArray)[, invert])Finds the elements of an array which satisfy a filter function.\t\nThe original array is not affected.->Utilities
hide()Hide the matched elements.->Effects
hide(options)Hide the matched elements.->Effects
hide([duration] [, complete])Hide the matched elements.->Effects
hide(duration [, easing] [, complete])Hide the matched elements.->Effects
holdReady(hold)Holds or releases the execution of jQuery's ready event.->Core
hasData(element)Determine whether an element has any jQuery data associated with it.->Data
hasClass(className)Determine whether any of the matched elements are assigned the given class.->Attributes
has(selector)Reduce the set of matched elements to those\t\nthat have a descendant that matches the()or DOM element.->Traversing
has(contained)Reduce the set of matched elements to those that have a descendant\t\nthat matches the()or DOM element.->Traversing
height()Get the current computed height for the first element in the set\t\nof matched elements or set the height of every matched element.->CSS
html()Get the HTML contents of the first element in the set of matched elements\t\n or set the HTML contents of every matched element.->Attributes
height(value)Get the current computed height for the first element in the set\t\nof matched elements or set the height of every matched element.->CSS
html(htmlString)Get the HTML contents of the first element in the set of matched elements\t\n or set the HTML contents of every matched element.->Attributes
hover(handlerInOut(eventObject)Bind one or two handlers to the matched elements,\t\nto be executed when the mouse pointer enters and leaves the elements.->Events
height(function(index, height)Get the current computed height for the first element in the set\t\nof matched elements or set the height of every matched element.->CSS
html(function(index, oldhtml)Get the HTML contents of the first element in the set of matched\t\nelements or set the HTML contents of every matched element.->Attributes
hover(handlerIn(eventObject), handlerOut(eventObject)Bind one or two handlers to the matched elements,\t\nto be executed when the mouse pointer enters and leaves the elements.->Events
isArray(obj)Determine whether the argument is an array.->Utilities
isWindow(obj)Determine whether the argument is a window.->Utilities
isNumeric(value)Determines whether its argument is a number.->Utilities
index()Search for a given element from among the matched elements.->Miscellaneous
index(element)Search for a given element from among the matched elements.->Miscellaneous
index(selector)Search for a given element from among the matched elements.->Miscellaneous
isFunction(obj)Determine if the argument passed is a Javascript function object. ->Utilities
insertAfter(target)Insert every element in the set of matched elements after the target.->Manipulation
isXMLDoc(node)Check to see if a DOM node is within an XML document (or is an XML document).->Utilities
isEmptyObject(object)Check to see if an object is empty (contains no enumerable properties).->Utilities
insertBefore(target)Insert every element in the set of matched elements before the target.->Manipulation
isPlainObject(object)Check to see if an object is a plain object (created using "{}" or "new Object").->Utilities
inArray(value , array [, fromIndex])Search for a specified value within an array and return its index\t\n(or -1 if not found).->Utilities
innerWidth()Get the current computed width for the first element in the set of\t\nmatched elements, including padding but not border.->CSS
innerHeight()Get the current computed height for the first element in the set\t\nof matched elements, including padding but not border.->CSS
is(elements)Check the current matched set of elements against a() ,\t\nelement, or jQuery object and return true if at least one of these elements matches the given arguments.->Traversing
is(selector)Check the current matched set of elements against a() ,\t\nelement, or jQuery object and return true if at least one of these elements matches the given arguments.->Traversing
is(jQuery object)Check the current matched set of elements against a() ,\t\nelement, or jQuery object and return true if at least one of these elements matches the given arguments.->Traversing
is(function(index)Check the current matched set of elements against a() ,\t\nelement, or jQuery object and return true if at least one of these elements matches the given arguments.->Traversing
jquery()A string containing the jQuery version number.->Internals
keyup()Bind an event handler to the "keyup" JavaScript event,or trigger that event on an element.->Events
keydown()Bind an event handler to the "keydown" JavaScript event, or trigger that event on an element.->Events
keypress()Bind an event handler to the "keypress" JavaScript event, or trigger that event on an element.->Events
keyup(handler(eventObject)Bind an event handler to the "keyup" JavaScript event, or trigger that event on an element.->Events
keydown(handler(eventObject)Bind an event handler to the "keydown" JavaScript event, or trigger that event on an element.->Events
keypress(handler(eventObject)Bind an event handler to the "keypress" JavaScript event, or trigger that event on an element.->Events
keyup([eventData] , handler(eventObject)Bind an event handler to the "keyup" JavaScript event, or trigger that event on an element.->Events
keydown([eventData] , handler(eventObject)Bind an event handler to the "keydown" JavaScript event, or trigger that event on an element.->Events
keypress([eventData] , handler(eventObject)Bind an event handler to the "keypress" JavaScript event, or trigger that event on an element.->Events
length()The number of elements in the jQuery object.->Properties
last()Reduce the set of matched elements to the final one in the set.->Traversing
load(handler(eventObject)Bind an event handler to the "load" JavaScript event.->Deprecated
load([eventData] , handler(eventObject)Bind an event handler to the "load" JavaScript event.->Deprecated
live(events)Attach an event handler for all elements which match the current()\t\n , now and in the future.->Deprecated
live(events , handler(eventObject)Attach an event handler for all elements which match the current\t\n() , now and in the future.->Deprecated
live(events , data , handler(eventObject)Attach an event handler for all elements which match the current\t\n() , now and in the future.->Deprecated
load(url [, data] [, complete(responseText, textStatus, XMLHttpRequest)])Load data from the server and place the returned HTML into the matched element.->Ajax
makeArray(obj)Convert an array-like object into a true JavaScript array.->Utilities
merge(first , second)Merge the contents of two arrays together into the first array. ->Utilities
mouseup()Bind an event handler to the "mouseup" JavaScript event, or trigger that event on an element.->Events
mouseout()Bind an event handler to the "mouseout" JavaScript event, or trigger that event on an element.->Events
mousedown()Bind an event handler to the "mousedown" JavaScript event, or trigger that event on an element.->Events
mousemove()Bind an event handler to the "mousemove" JavaScript event, or trigger that event on an element.->Events
mouseover()Bind an event handler to the "mouseover" JavaScript event, or trigger that event on an element.->Events
map(arrayOrObject , callback( value, indexOrKey )Translate all items in an array or object to new array of items.->Utilities
map(array , callback( elementOfArray, indexInArray )Translate all items in an array or object to new array of items.->Utilities
mouseenter()Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.->Events
mouseleave()Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.->Events
mouseup(handler(eventObject)Bind an event handler to the "mouseup" JavaScript event, or trigger that event on an element.->Events
mouseout(handler(eventObject)Bind an event handler to the "mouseout" JavaScript event, or trigger that event on an element.->Events
mousedown(handler(eventObject)Bind an event handler to the "mousedown" JavaScript event, or trigger that event on an element.->Events
mousemove(handler(eventObject)Bind an event handler to the "mousemove" JavaScript event, or trigger that event on an element.->Events
mouseover(handler(eventObject)Bind an event handler to the "mouseover" JavaScript event, or trigger that event on an element.->Events
mouseup([eventData] , handler(eventObject)Bind an event handler to the "mouseup" JavaScript event, or trigger that event on an element.->Events
mouseenter(handler(eventObject)Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.->Events
mouseleave(handler(eventObject)Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.->Events
mouseout([eventData] , handler(eventObject)Bind an event handler to the "mouseout" JavaScript event, or trigger that event on an element.->Events
mousedown([eventData] , handler(eventObject)Bind an event handler to the "mousedown" JavaScript event, or trigger that event on an element.->Events
mousemove([eventData] , handler(eventObject)Bind an event handler to the "mousemove" JavaScript event, or trigger that event on an element.->Events
mouseover([eventData] , handler(eventObject)Bind an event handler to the "mouseover" JavaScript event, or trigger that event on an element.->Events
mouseenter([eventData] , handler(eventObject)Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.->Events
mouseleave([eventData] , handler(eventObject)Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.->Events
map(callback(index, domElement)Pass each element in the current matched set through a function,\t\nproducing a new jQuery object containing the return values.->Traversing
noop()An empty function.->Utilities
now()Return a number representing the current time.->Utilities
not(elements)Remove elements from the set of matched elements.->Traversing
not(selector)Remove elements from the set of matched elements.->Traversing
noConflict([removeAll])Relinquish jQuery's control of the $ variable.->Core
not(jQuery object)Remove elements from the set of matched elements.->Traversing
not(function(index)Remove elements from the set of matched elements.->Traversing
nextAll([selector])Get all following siblings of each element in the set of matched\t\nelements, optionally filtered by a() .->Traversing
nextUntil([element] [, filter])Get all following siblings of each element up to but not including\t\nthe element matched by the() , DOM node, or jQuery object passed.->Traversing
nextUntil([selector] [, filter])Get all following siblings of each element up to but not including\t\nthe element matched by the() , DOM node, or jQuery object passed.->Traversing
next([selector])Get the immediately following sibling of each element in the set\t\nof matched elements. If a()is provided, it retrieves the next sibling only if it matches that() .->Traversing
off()Remove an event handler.->Events
off(events [,() ])Remove an event handler.->Events
offsetParent()Get the closest ancestor element that is positioned.->Offset
off(events [,() ] [, handler(eventObject)])Remove an event handler.->Events
on(events [,() ] [, data])Attach an event handler function for one or more events to the selected elements.->Events
on(events [,() ] [, data] , handler(eventObject)Attach an event handler function for one or more events to the selected\t\nelements.->Events
one(events [,() ] [, data])Attach a handler to an event for the elements.\t\nThe handler is executed at most once per element per event type.->Events
outerWidth([includeMargin])Get the current computed width for the first element in the set of\t\nmatched elements, including padding and border.->CSS
offset()Get the current coordinates of the first element,or set the coordinates of every element, in the set of matched elements, relative to the document.->CSS
one(events [, data] , handler(eventObject)Attach a handler to an event for the elements.\t\nThe handler is executed at most once per element per event type.->Events
one(events [,() ] [, data] , handler(eventObject)Attach a handler to an event for the elements.\t\nThe handler is executed at most once per element per event type.->Events
offset(coordinates)Get the current coordinates of the first element, or set the coordinates of every element, in the set of matched elements, relative to the document.->CSS
offset(function(index, coords)Get the current coordinates of the first element, or set the coordinates of every element, in the set of matched elements, relative to the document.->CSS
outerHeight([includeMargin])Get the current computed height for the first element in the set\t\nof matched elements, including padding, border, and optionally margin.->CSS
parseXML(data)Parses a string into an XML document.->Utilities
pushStack(elements)Add a collection of DOM elements onto the jQuery stack.->Internals
parseHTML(data [, context] [, keepScripts])Parses a string into an array of DOM nodes.->Utilities
parseJSON(json)Takes a well-formed JSON string and returns the resulting JavaScript object.->Utilities
pushStack(elements , name , arguments)Add a collection of DOM elements onto the jQuery stack.->Internals
proxy(context , name)Takes a function and returns a new one that will always have a particular context.->Events
prependTo(target)Insert every element in the set of matched elements to the beginning of the target.->Manipulation
proxy(function , context)Takes a function and returns a new one that will always have a particular context.->Events
post(url [, data] [, success(data, textStatus, jqXHR)] [, dataType])Load data from the server using a HTTP POST request.->Ajax
position()Get the current coordinates of the first element in the set of matched\t\nelements, relative to the offset parent.->CSS
parent([selector])Get the parent of each element in the current set of matched elements,\t\noptionally filtered by a() .->Traversing
param(obj)Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request. ->Ajax
parents([selector])Get the ancestors of each element in the current set of matched elements,\t\noptionally filtered by a() .->Traversing
prevAll([selector])Get all preceding siblings of each element in the set of matched\t\nelements, optionally filtered by a() .->Traversing
proxy(context , name [, additionalArguments])Takes a function and returns a new one that will always have a particular\t\ncontext.->Events
proxy(function , context [, additionalArguments])Takes a function and returns a new one that will always have a particular\t\ncontext.->Events
prev([selector])Get the immediately preceding sibling of each element in the set\t\nof matched elements, optionally filtered by a() .->Traversing
param(obj , traditional)Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request. ->Ajax
prepend(content [, content])Insert content, specified by the parameter,\t\nto the beginning of each element in the set of matched elements.->Manipulation
prepend(function(index, html)Insert content, specified by the parameter,\t\nto the beginning of each element in the set of matched elements.->Manipulation
prop(properties)Get the value of a property for the first element in the set of matched\t\nelements or set one or more properties for every matched element.->Attributes
prop(propertyName)Get the value of a property for the first element in the set of matched\t\nelements or set one or more properties for every matched element.->Attributes
prevUntil([element] [, filter])Get all preceding siblings of each element up to but not including\t\nthe element matched by the() , DOM node, or jQuery object.->Traversing
promise([type] [, target])Return a Promise object to observe when all actions of a certain\t\ntype bound to the collection, queued or not, have finished. ->Deferred Object
prevUntil([selector] [, filter])Get all preceding siblings of each element up to but not including\t\nthe element matched by the() , DOM node, or jQuery object.->Traversing
prop(propertyName , value)Get the value of a property for the first element in the set of matched\t\nelements or set one or more properties for every matched element.->Attributes
parentsUntil([element] [, filter])Get the ancestors of each element in the current set of matched elements,\t\nup to but not including the element matched by the() , DOM node, or jQuery object.->Traversing
prop(propertyName , function(index, oldPropertyValue)Get the value of a property for the first element in the set of matched\t\nelements or set one or more properties for every matched element.->Attributes
parentsUntil([selector] [, filter])Get the ancestors of each element in the current set of matched elements,\t\nup to but not including the element matched by the() , DOM node, or jQuery object.->Traversing
queue([queueName])Show or manipulate the queue of functions to be executed on the matched elements.->Data
queue(element [, queueName])Show or manipulate the queue of functions to be executed on the matched element.->Data
queue([queueName] , newQueue)Show or manipulate the queue of functions to be executed on the matched elements.->Data
queue([queueName] , callback( next )Show or manipulate the queue of functions to be executed on the matched elements.->Data
queue(element , queueName , newQueue)Show or manipulate the queue of functions to be executed on the matched element.->Data
queue(element , queueName , callback()Show or manipulate the queue of functions to be executed on the matched element.->Data
removeData([list])Remove a previously-stored piece of data.->Data
removeData([name])Remove a previously-stored piece of data.->Data
removeData(element [, name])Remove a previously-stored piece of data.->Data
remove([selector])Remove the set of matched elements from the DOM.->Manipulation
ready(handler)Specify a function to execute when the DOM is fully loaded.->Events
removeProp(propertyName)Remove a property for the set of matched elements.->Attributes
replaceAll(target)Replace each target element with the set of matched elements.->Manipulation
removeAttr(attributeName)Remove an attribute from each element in the set of matched elements.->Attributes
resize()Bind an event handler to the "resize" JavaScript event, or trigger that event on an element.->Events
resize(handler(eventObject)Bind an event handler to the "resize" JavaScript event, or trigger that event on an element.->Events
removeClass([className])Remove a single class, multiple classes,\t\nor all classes from each element in the set of matched elements.->Attributes
resize([eventData] , handler(eventObject)Bind an event handler to the "resize" JavaScript event, or trigger that event on an element.->Events
removeClass(function(index, class)Remove a single class, multiple classes,\t\nor all classes from each element in the set of matched elements.->Attributes
replaceWith(function)Replace each element in the set of matched elements with the provided\t\nnew content and return the set of elements that was removed.->Manipulation
replaceWith(newContent)Replace each element in the set of matched elements with the provided\t\nnew content and return the set of elements that was removed.->Manipulation
show()Display the matched elements.->Effects
show(options)Display the matched elements.->Effects
show([duration] [, complete])Display the matched elements.->Effects
size()Return the number of elements in the jQuery object.->Deprecated
slideUp(options)Hide the matched elements with a sliding motion.->Effects
serialize()Encode a set of form elements as a string for submission.->Ajax
show(duration [, easing] [, complete])Display the matched elements.->Effects
slideDown(options)Display the matched elements with a sliding motion.->Effects
serializeArray()Encode a set of form elements as an array of names and values.->Ajax
slideToggle(options)Display or hide the matched elements with a sliding motion.->Effects
slideUp([duration] [, complete])Hide the matched elements with a sliding motion.->Effects
slideDown([duration] [, complete])Display the matched elements with a sliding motion.->Effects
slideUp([duration] [, easing] [, complete])Hide the matched elements with a sliding motion.->Effects
selector()A representing passed to jQuery(),\t\nif any, when creating the original set.->Deprecated
stop([clearQueue] [, jumpToEnd])Stop the currently-running animation on the matched elements.->Effects
slideToggle([duration] [, complete])Display or hide the matched elements with a sliding motion.->Effects
slideDown([duration] [, easing] [, complete])Display the matched elements with a sliding motion.->Effects
scroll()Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.->Events
select()Bind an event handler to the "select" JavaScript event, or trigger that event on an element.->Events
slice(start [, end])Reduce the set of matched elements to a subset specified by a range of indices.->Traversing
submit()Bind an event handler to the "submit" JavaScript event, or trigger that event on an element.->Events
stop([queue] [, clearQueue] [, jumpToEnd])Stop the currently-running animation on the matched elements.->Effects
slideToggle([duration] [, easing] [, complete])Display or hide the matched elements with a sliding motion.->Effects
siblings([selector])Get the siblings of each element in the set\t\nof matched elements, optionally filtered by a() .->Traversing
scroll(handler(eventObject)Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.->Events
select(handler(eventObject)Bind an event handler to the "select" JavaScript event, or trigger that event on an element.->Events
submit(handler(eventObject)Bind an event handler to the "submit" JavaScript event, or trigger that event on an element.->Events
sub()Creates a new copy of jQuery whose properties and methods can be\t\nmodified without affecting the original jQuery object.->Core
scroll([eventData] , handler(eventObject)Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.->Events
select([eventData] , handler(eventObject)Bind an event handler to the "select" JavaScript event, or trigger that event on an element.->Events
submit([eventData] , handler(eventObject)Bind an event handler to the "submit" JavaScript event, or trigger that event on an element.->Events
scrollTop()Get the current vertical position of the scroll bar for the first\t\nelement in the set of matched elements or set the vertical position of the scroll bar for every matched element.->CSS
scrollLeft()Get the current horizontal position of the scroll bar for the first\t\nelement in the set of matched elements or set the horizontal position of the scroll bar for every matched element.->CSS
scrollTop(value)Get the current vertical position of the scroll bar for the first\t\nelement in the set of matched elements or set the vertical position of the scroll bar for every matched element.->CSS
scrollLeft(value)Get the current horizontal position of the scroll bar for the first element in the set of matched elements\t\n or set the horizontal position of the scroll bar for every matched element.->CSS
support()A collection of properties that represent the presence of different\t\nbrowser features or bugs. Intended for jQuery's internal use;( use a lib like Modernize)->Properties
toggle(options)Display or hide the matched elements.->Effects
toggle(showOrHide)Display or hide the matched elements.->Effects
toggle([duration] [, complete])Display or hide the matched elements.->Effects
type(obj)Determine the internal JavaScript [[Class]] of an object.->Utilities
trim(str)Remove the whitespace from the beginning and end of a string.->Utilities
toggle(duration [, easing] [, complete])Display or hide the matched elements.->Effects
toArray()Retrieve all the elements contained in the jQuery set, as an array.->Miscellaneous
triggerHandler(eventType [, extraParameters])Execute all handlers attached to an element for an event.->Events
trigger(event [, extraParameters])Execute all handlers and behaviors attached to the matched elements\t\nfor the given event type.->Events
trigger(eventType [, extraParameters])Execute all handlers and behaviors attached to the matched elements\t\nfor the given event type.->Events
toggle(handler(eventObject), handler(eventObject)[, handler(eventObject)])Bind two or more handlers to the matched elements,\t\nto be executed on alternate clicks.->Deprecated
text()Get the combined text contents of each element in the set of matched\t\nelements, including their descendants, or set the text contents of the matched elements.->Manipulation
text(textString)Get the combined text contents of each element in the set of matched\t\nelements, including their descendants, or set the text contents of the matched elements.->Manipulation
toggleClass([switch])Add or remove one or more classes from each element in the set of\t\nmatched elements, depending on either the class's presence or the value of the switch argument.->Attributes
toggleClass(className)Add or remove one or more classes from each element in the set of\t\nmatched elements, depending on either the class's presence or the value of the switch argument.->Attributes
text(function(index, text)Get the combined text contents of each element in the set of matched\t\nelements, including their descendants, or set the text contents of the matched elements.->Manipulation
toggleClass(className , switch)Add or remove one or more classes from each element in the set of matched elements,\t\ndepending on either the class's presence or the value of the switch argument.->Attributes
toggleClass(function(index, class, switch)[, switch])Add or remove one or more classes from each element in the set of\t\nmatched elements ?Attributes
unbind()Remove a previously-attached event handler from the elements.->Events
unbind(event)Remove a previously-attached event handler from the elements.->Events
unbind(eventType , false)Remove a previously-attached event handler from the elements.->Events
unload(handler(eventObject)Bind an event handler to the "unload" JavaScript event.->Deprecated
unload([eventData] , handler(eventObject)Bind an event handler to the "unload" JavaScript event.->Deprecated
unbind(eventType [, handler(eventObject)])Remove a previously-attached event handler from the elements.->Events
unwrap()Remove the parents of the set of matched elements from the DOM,\t\nleaving the matched elements in their place.->Manipulation
undelegate()Remove a handler from the event for all elements which match the\t\ncurrent() , based upon a specific set of root elements.->Events
undelegate(namespace)Remove a handler from the event for all elements which match the\t\ncurrent() , based upon a specific set of root elements.->Events
undelegate(selector , events)Remove a handler from the event for all elements which match the\t\ncurrent() , based upon a specific set of root elements.->Events
undelegate(selector , eventType)Remove a handler from the event for all elements which match the\t\ncurrent() , based upon a specific set of root elements.->Events
unique(array)Sorts an array of DOM elements, in place,\t\nwith the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers.->Utilities
undelegate(selector , eventType , handler(eventObject)Remove a handler from the event for all elements which match the\t\ncurrent() , based upon a specific set of root elements.->Events
val()Get the current value of the first element in the set of matched\t\nelements or set the value of every matched element.->Attributes
val(value)Get the current value of the first element in the set of matched\t\nelements or set the value of every matched element.->Attributes
val(function(index, value)Get the current value of the first element in the set of matched\t\nelements or set the value of every matched element.->Attributes
wrap(function(index)Wrap an HTML structure around each element in the set of matched elements.->Manipulation
wrap(wrappingElement)Wrap an HTML structure around each element in the set of matched elements.->Manipulation
wrapAll(wrappingElement)Wrap an HTML structure around all elements in the set of matched elements.->Manipulation
wrapInner(function(index)Wrap an HTML structure around the content of each element in the\t\nset of matched elements.->Manipulation
wrapInner(wrappingElement)Wrap an HTML structure around the content of each element in the\t\nset of matched elements.->Manipulation
width()Get the current computed width for the first element in the set of\t\nmatched elements or set the width of every matched element.->CSS
width(value)Get the current computed width for the first element in the set of\t\nmatched elements or set the width of every matched element.->CSS
when(deferreds)Provides a way to execute callback functions based on one or more\t\nobjects, usually Deferred objects that represent asynchronous events.->Core
width(function(index, width)Get the current computed width for the first element in the set of\t\nmatched elements or set the width of every matched element.->CSS

# Collections
$()Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(callback)Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(element)Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(elementArray)Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(html , attributes)Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(html [, ownerDocument])Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(jQuery object)Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(object)Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core
$(selector [, context])Return a collection of matched elements either found in the DOM based\t\non passed argument(s)or created by passing an HTML string. -> jQuery1.9 Core

# Selectors
attributeContains() [name*="value"] Selects elements that have the specified attribute with a value containing\t\nthe a given substring. -> jQuery1.9() Selectors
attributeContainsPrefix() [name|="value"] Selects elements that have the specified attribute with a value either\t\nequal to a given string or starting with that string followed by a hyphen (-). -> jQuery1.9() Selectors
attributeContainsWord() [name~="value"] Selects elements that have the specified attribute with a value containing\t\na given word, delimited by spaces. -> jQuery1.9() Selectors
attributeEndsWith() [name$="value"] Selects elements that have the specified attribute with a value ending\t\nexactly with a given string. The comparison is case sensitive. -> jQuery1.9() Selectors
attributeEquals() [name="value"] Selects elements that have the specified attribute with a value exactly\t\nequal to a certain value. -> jQuery1.9() Selectors
attributeNotEqual() [name!="value"] Select elements that either don't have the specified attribute,\t\nor do have the specified attribute but not with a certain value. -> jQuery1.9() Selectors
attributeStartsWith() [name^="value"] Selects elements that have the specified attribute with a value beginning\t\nexactly with a given string. -> jQuery1.9() Selectors
child() ("parent > child") Selects all direct child elements specified by "child" of elements\t\nspecified by "parent". -> jQuery1.9() Selectors
class() (".class")Selects all elements with the given class.  -> jQuery1.9() Selectors
descendant() ("ancestor descendant") Selects all elements that are descendants of a given ancestor. -> jQuery1.9() Selectors
element() ("element")Selects all elements with the given tag name. -> jQuery1.9() Selectors
hasAttribute() [name] Selects elements that have the specified attribute, with any value.  -> jQuery1.9() Selectors
id() ("#id")Selects a single element with the given id attribute.  -> jQuery1.9() Selectors
multiple() ("selector1,() 2,() N")Selects the combined results of all the specified() s. -> jQuery1.9() Selectors
multipleAttribute() [name="value"][name2="value2"] Matches elements that match all of the specified attribute filters. -> jQuery1.9() Selectors
nextAdjacent() ("prev + next") Selects all next elements matching "next"\t\nthat are immediately preceded  by a sibling "prev". -> jQuery1.9() Selectors
nextSiblings() ("prev ~ siblings") Selects all sibling elements that follow after the "prev" element,\t\nhave the same parent, and match the filtering "siblings"() . -> jQuery1.9() Selectors

:animated()Select all elements that are in the progress\t\nof an animation at the time the()is run. -> jQuery1.9() Selectors
:button()Selects all button elements and elements of type button. -> jQuery1.9() Selectors
:checkbox()Selects all elements of type checkbox. -> jQuery1.9() Selectors
:checked()Matches all elements that are checked or selected. -> jQuery1.9() Selectors
:contains()Select all elements that contain the specified text. -> jQuery1.9() Selectors
:disabled()Selects all elements that are disabled. -> jQuery1.9() Selectors
:empty()Select all elements that have no children (including text nodes). -> jQuery1.9() Selectors
:enabled()Selects all elements that are enabled. -> jQuery1.9() Selectors
:eq()Select the element at index n within the matched set. -> jQuery1.9() Selectors
:even()Selects even elements, zero-indexed. See also odd. -> jQuery1.9() Selectors
:file()Selects all elements of type file. -> jQuery1.9() Selectors
:first-child()Selects all elements that are the first child of their parent. -> jQuery1.9() Selectors
:first-of-type()Selects all elements that are the first among\t\nsiblings of the same element name. -> jQuery1.9() Selectors
:first()Selects the first matched element. -> jQuery1.9()Selectors
:focus()Selects element if it is currently focused. -> jQuery1.9() Selectors
:gt()Select all elements at an index greater than index within the matched set. -> jQuery1.9() Selectors
:has()Selects elements which contain at least one element\t\nthat matches  the specified() . -> jQuery1.9() Selectors
:header()Selects all elements that are headers, like h1, h2, h3 and so on. -> jQuery1.9() Selectors
:hidden()Selects all elements that are hidden. -> jQuery1.9() Selectors
:image()Selects all elements of type image. -> jQuery1.9() Selectors
:input()Selects all input, textarea, select and button elements. -> jQuery1.9() Selectors
:lang()Selects all elements of the specified language. -> jQuery1.9() Selectors
:last-child()Selects all elements that are the last child of their parent. -> jQuery1.9() Selectors
:last-of-type()Selects all elements that are the last among siblings of the same element name. -> jQuery1.9() Selectors
:last()Selects the last matched element. -> jQuery1.9() Selectors
:lt()Select all elements at an index less than index within the matched set. -> jQuery1.9() Selectors
:not()Selects all elements that do not match the given() . -> jQuery1.9() Selectors
:nth-child()Selects all elements that are the nth-child of their parent. -> jQuery1.9() Selectors
:nth-last-child()Selects all elements that are the nth-child of their parent,\t\ncounting from the last element to the first. -> jQuery1.9() Selectors
:nth-last-of-type()Selects all elements that are the nth-child of their parent,\t\ncounting from the last element to the first. -> jQuery1.9() Selectors
:nth-of-type()Selects all elements that are the nth child of their parent in relation\t\nto siblings with the same element name. -> jQuery1.9() Selectors
:odd() Selects odd elements, zero-indexed. See also even. -> jQuery1.9() Selectors
:only-child()Selects all elements that are the only child of their parent. -> jQuery1.9() Selectors
:only-of-type()Selects all elements that have no siblings\t\nwith the same element name. -> jQuery1.9() Selectors
:parent()Select all elements that have at least one child node (either an\t\nelement or text). -> jQuery1.9() Selectors
:password()Selects all elements of type password. -> jQuery1.9() Selectors
:radio()Selects all elements of type radio. -> jQuery1.9() Selectors
:reset()Selects all elements of type reset. -> jQuery1.9() Selectors
:root()Selects the element that is the root of the document. -> jQuery1.9() Selectors
:selected()Selects all elements that are selected. -> jQuery1.9() Selectors
:submit()Selects all elements of type submit. -> jQuery1.9() Selectors
:target()Selects the target element indicated by the fragment\t\nidentifier of  the document's URI. -> jQuery1.9() Selectors
:text()Selects all elements of type text. -> jQuery1.9() Selectors
:visible()Selects all elements that are visible. -> jQuery1.9() Selectors
